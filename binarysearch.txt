public class Main
{

	public int BinarySearch(int a[],int tar) {
		int startindex=0;
		int endidx=a.length-1;
		while (startindex<=endidx) {
		  int mid = startindex + (endidx - startindex) / 2;
			if(tar<a[mid]) {
				endidx=mid-1;
			} else if(tar>a[mid]) {
				startindex=mid+1;
			} else {
				return 1;
			}
		}
		return -1;
	}
  
   public int  binaryHelper(int a[],int tar){
      int startindex=0;
      int endidx=a.length-1;
     return BinarySearchRecurse(a,tar,startindex,endidx);
   }
  
   public int BinarySearchRecurse(int a[],int tar,int startindex,int  endidx){
       
      if(startindex>endidx){
         return-1;
      }
            int mid = startindex + (endidx - startindex) / 2;
         	if(tar<a[mid]) {
			return	BinarySearchRecurse(a,tar,startindex,mid-1);
			} else if(tar>a[mid]) {
			return	BinarySearchRecurse(a,tar,mid+1,endidx);
			} else {
				return 1;
			}
      
   }


	public static void main(String[] args) {
		System.out.println("Hello World");
		Main list=new Main();
		int a[] = {1, 2, 4, 5, 7, 8};
		int data=list.binaryHelper(a,-1);
		if(data==-1) {
			System.out.println("number is not found");
		} else {
			System.out.print("found");
		}
		
	

	}
}  binary search